Cloudwatch
* It is a monitoring service for AWS cloud resources and applications deployed on cloud resources.
* We can use to track and monitor resources, collect and monitor log files, set alarms and automatically react to changes in AWS cloud resources. 
* There are a lot of set of metrics like disk usage, memory consumption etc. 
* For Example: we can set alarms for Auto-scaling of EC2 instances, can monitor metrics of data of your database instances like DynamoDB and RDS. 
* It is used to analyze parameters of log files that are generated by various AWS resources. 
* We can analyze how much we are using various AWS resources. We can set pre-set commands to respond to a certain condition. 
* Provides an opportunity to analyze the recorded data of cloud resources using graphical representation.


Alarms
* Alarms are a feature provided by Cloudwatch which can be used to perform a specific action when a certain event happens.
* We can specify metrics and conditions to specify when action should happen.
* We can also specify the type of event which must take place when a value of a metric crosses the specified condition.
* For example: we can create a cloud alarm for scaling up an Auto Scaling group (event) when average CPU utilization (metric) crosses 50% (value for metric).
* We can also create billing alarms by specifying various metrics like total cost, selecting a specific resource or service. We can create an action to shut down or scale down the service if the bill value increases above certain condition.


Cloudwatch logs
* A log is a file that records all the events that occur during execution of AWS cloud resources, services, and applications. 
* We can create log groups to collect interrelated log streams together and store them together.
* These log groups can be transferred to a S3 bucket. 
* We can also create a metric filter to analyze specific event during log stream of the resource or application.
* For example: we can analyze the event of a EC2 instance failure, to learn what happened, and take steps to prevent this from happening in the future.
* Cloudwatch logs provide insights can be used to analyze and visualize logs by the use of queries.


Metrics
* Here we can visualize our Cloudwatch metrics by the use of graphs.
* This helps in easier analysis of large duration of log records of certain metrics.
* For example: we can analyze CPU utilization of our Auto scaling group with over a large time duration, to check for trends of spike in traffic to our application.


Events
* We can create events for cloud resources if and when condition of Cloudwatch alarms gets satisfied. 
* Event sources can be resources whose events can be programmed in two ways:
1. Scheduled: according to the timing.
2. Pattern: according happening of certain events.
* For example: we can schedule a scale up for auto-scaling group for higher traffic on application on Sundays or we can schedule it when CPU utilization spikes above 50%.
